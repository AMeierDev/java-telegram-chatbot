# This is a basic workflow to help you get started with Actions

name: Build Java BuildDepolyDocker Start Docker on Server

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - main
      - staging


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn clean package
      
      - uses: actions/upload-artifact@v2
        with:
         name: java.telegrambots.jar
         path: target/

  deploy:
    name: Deploy to Docker and restart on Server
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - name: Git branch name
      id: git-branch-name
      uses: EthanSK/git-branch-name-action@v1
    - name: Checkout
      uses: actions/checkout@v2


    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
          name: java.telegrambots.jar
          path: target/
    
    - name: Set up qemu
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: linux/amd64,linux/arm64,linux/arm/v7
    -
        name: Inspect builder
        run: |
          echo "Name:      ${{ steps.qemu.outputs.name }}"
          echo "Endpoint:  ${{ steps.qemu.outputs.endpoint }}"
          echo "Status:    ${{ steps.qemu.outputs.status }}"
          echo "Flags:     ${{ steps.qemu.outputs.flags }}"
          echo "Platforms: ${{ steps.qemu.outputs.platforms }}"
    -
        name: start buildx container
        run: docker buildx create --use
    
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2      
      with:
        context: ./
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: amgamen/chatbot:${{ env.GIT_BRANCH_NAME }}
        
    - name: Create SSH key
      id: create_ssh_key
      run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/private.key
          sudo chmod 600 ~/private.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
      shell: bash
      env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
    - name: start docker with ssh  
      run: ssh -i ~/private.key -p 19999 bigmama@bigamgamen.de  '/home/atomuser/progs/docker/start_bot_${{ env.GIT_BRANCH_NAME }}.sh'
