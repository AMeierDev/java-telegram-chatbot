# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn clean package
      
      - uses: actions/upload-artifact@v2
        with:
         name: java.telegrambots.jar
         path: target/

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2


    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
          name: java.telegrambots.jar
          path: target/
    
    - name: Set up Quemu
      id: quemu
      uses: docker/setup-quemu-action@v2
      with:
        image: tonistiigi/binfmt:latest
        platforms: linux/amd64,linux/arm64,linux/arm/v7
    -
        name: Inspect builder
        run: |
          echo "Name:      ${{ steps.quemu.outputs.name }}"
          echo "Endpoint:  ${{ steps.quemu.outputs.endpoint }}"
          echo "Status:    ${{ steps.quemu.outputs.status }}"
          echo "Flags:     ${{ steps.quemu.outputs.flags }}"
          echo "Platforms: ${{ steps.quemu.outputs.platforms }}"
    
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2      
      with:
        context: ./
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: amgamen/chatbot:latest
